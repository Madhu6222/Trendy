@model ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";

}

<ul class="nav  aa-products-tab">

    <li class="active"><a href="#"><h2>Products</h2></a></li>
</ul>

<div>
    <form >
        <h3>Search</h3>
        <div class="row">
            
            <div class="col-md-3">
                <div class="form-group">  
                 <input name="Search" id="searchTxt" class="form-control"  placeholder="Search" >
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">

                    <div class="row">
                        <div class="col-md-3 col-sm-2">
                            <button type="button" id="searchBtn" class="btn aa-browse-btn">Search</button>
                        </div>
                        <div class="col-md-3 col-sm-2">
                            <button type="button" id="resetBtn" class="btn aa-browse-btn">Reset</button>
                        </div>
                        <div class="col-md-6">
                            <button type="button" id="newBtn" class="btn aa-browse-btn">New</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<br />

<div id="dataContainer" class="table-responsive">
    <table id="ProductsTable" class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Category</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {

                foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>
                            @if (product.Category != null)
                            {
                                <text>@product.Category.Name</text>
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>@product.Price</td>
                        <td>
                            <button class="aa-browse-btn btn editProductBtn" data-id="@product.ID">Edit</button>
                            <button class="aa-browse-btn btn deleteProductBtn" data-id="@product.ID">Delete</button>
                            <button class="aa-browse-btn btn addToCartBtn" data-id="@product.ID">Add To Cart</button>
                        </td>
                    </tr>

                }

            }
            else
            {
                <tr>
                    <td class="text-danger">No Products Found.</td>
                </tr>

            }




        </tbody>
    </table>
    <div>

        @if (Model.Pager != null)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                if (Model.Pager.CurrentPage >= 3)
                {
                    <button class="aa-browse-btn btn pageButtons" data-pageNo="1">First</button>
                }
                <button class="aa-browse-btn btn pageButtons" data-pageNo="@(Model.Pager.CurrentPage - 1)">Previous</button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass aa-browse-btn btn pageButtons" data-pageNo="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                if (Model.Pager.CurrentPage <= Model.Pager.TotalPages - 2)
                {
                    <button class="aa-browse-btn btn pageButtons" data-pageNo="@(Model.Pager.CurrentPage + 1)">Next</button>
                }
                <button class="aa-browse-btn btn pageButtons" data-pageNo="@Model.Pager.EndPage">Last</button>
            }

        }
    </div>
</div>




<script>



    $(document).ready(function () {

        //$("#ProductsTable").DataTable();

        $(".pageButtons").on("click", function () {

            $.ajax({
                type: "Get",
                url: '@Url.Action("ProductTable", "Product")',
                data: {
                    pageNo: $(this).attr("data-pageNo"),
                    search: '@Model.SearchTerm'
                },
                success: function (result) {


                    $('#tblContainer').html(result);

                },
                error: function (result) {
                    console.log(result);
                }


            });

        });

    //  $("#tblContainer ").on("click","#searchBtn" ,function () {
        $("#searchBtn" ).on("click",function () {


            var searchValue = $('#searchTxt').val();
            console.log(searchValue);
            $.ajax(
                {
                    type: "Post",
                    url: '@Url.Action("ProductTable", "Product")',
                    data: { search: searchValue } ,

                    success: function (result) {
                        $("#tblContainer").html(result);

                    },
                    error: function (result) {
                        console.log(result);
                    }

                });
        });

        $("#resetBtn" ).on("click",function () {


            var searchValue = '';
            console.log(searchValue);
            $.ajax(
                {
                    type: "Post",
                    url: '@Url.Action("ProductTable", "Product")',
                    data: { search: searchValue } ,

                    success: function (result) {
                        $("#tblContainer").html(result);

                    },
                    error: function (result) {
                        console.log(result);
                    }

                });
        });

        $("#newBtn").on("click", function () {

            $.ajax({
                type: "Get",
                url: '@Url.Action("Create", "Product")',
                success: function (result) {


                    $('#actionContainer').html(result);
                    focusAction("actionContainer");
                },
                error: function (result) {
                    console.log(result);
                }


            });

        });
        $(".editProductBtn").on("click", function () {

            $.ajax({

                url: '@Url.Action("Edit", "Product")',
                data: {
                    ID: $(this).attr("data-id")
                },
                success: function (result) {


                    $('#actionContainer').html(result);
                    focusAction("actionContainer");
                },
                error: function (result) {
                    console.log(result);
                }


            });

        });
        $(".deleteProductBtn").on("click", function () {


            swal({
                title: "Confirm?",
                text: "Are you sure you want to delete this product?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {

                        $.ajax({
                            type: "Post",
                            url: '@Url.Action("Delete", "Product")',
                            data: {
                                ID: $(this).attr("data-id")
                            },
                            success: function (result) {

                                $('#tblContainer').html(result);
                                swal("Product deleted Successfully!", {
                                    icon: "success",
                                });
                            },
                            error: function (result) {
                                console.log(result);
                            }



                        });
                    } else {
                        swal("Your product is safe!");
                    }
                });


        });

        var products = [];

        $(".addToCartBtn").on("click", function () {
            var productID = $(this).attr("data-id");
            products.push(productID);
            $.cookie('CartProducts', products.join('-'), {path: '/' });
            alert("Product added to cart.");

        });

    });

    function focusAction(controlToFocus) {
        $('html, body').animate({
            scrollTop: $("#" + controlToFocus).offset().top - 100
        }, 1000)
    }

</script>

