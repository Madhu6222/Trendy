@model CategorySearchViewModel
@{
    ViewBag.Title = "CategoryTable";

}


<ul class="nav  aa-products-tab">

    <li class="active"><a href="#" ><h2>Categories</h2></a></li>
</ul>

<div>
    <form>
        <h3>Search</h3>
        <div class="row">

            <div class="col-md-3">
                <div class="form-group">
                    <input name="Search" id="searchTxt" class="form-control" placeholder="Search">
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">

                    <div class="row">
                        <div class="col-md-3 col-sm-2">
                            <button type="button" id="searchBtn" class="btn aa-browse-btn">Search</button>
                        </div>
                        <div class="col-md-3 col-sm-2">
                            <button type="button" id="resetBtn" class="btn aa-browse-btn">Reset</button>
                        </div>
                        <div class="col-md-6">
                            <button type="button" id="newBtn" class="btn aa-browse-btn">New</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div id="dataContainer" class="table-responsive">
    <table id="CategoriesTable" class="table">
        <thead>
            <tr>
                <th>Category Name</th>
                <th>Products</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Categories != null && Model.Categories.Count > 0)
            {

                foreach (var category in Model.Categories)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>
                            @if (category.Products != null)
                            {
                                <span>@category.Products.Count</span>
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>
                            <button class="aa-browse-btn btn editCategoryBtn" data-id="@category.ID">Edit</button>
                            <button class="aa-browse-btn btn deleteCategoryBtn" data-id="@category.ID">Delete</button>
                        </td>
                    </tr>

                }
            }



        </tbody>
    </table>

    <div>

        @if (Model.Pager != null)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                <button class="aa-browse-btn btn pageButtons" data-pageNo="1">First</button>
                <button class="aa-browse-btn btn pageButtons" data-pageNo="@(Model.Pager.CurrentPage - 1)">Previous</button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass aa-browse-btn btn pageButtons" data-pageNo="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="aa-browse-btn btn pageButtons" data-pageNo="@(Model.Pager.CurrentPage + 1)">Next</button>
                <button class="aa-browse-btn btn pageButtons" data-pageNo="@Model.Pager.EndPage">Last</button>
            }

        }
    </div>

</div>

<script>
    $(document).ready(function () {


        $(".pageButtons").on("click", function () {

            $.ajax({
                type: "Get",
                url: '@Url.Action("CategoryTable", "Category")',
                data: {
                    pageNo: $(this).attr("data-pageNo"),
                    search: '@Model.SearchTerm'
                },
                success: function (result) {


                    $('#tblContainer').html(result);

                },
                error: function (result) {
                    console.log(result);
                }


            });

        });
          //$("#CategoriesTable").DataTable();

          $("#searchBtn" ).on("click",function () {


              var searchValue = $('#searchTxt').val();


              $.ajax(
                  {
                      type: "Post",
                      url: '@Url.Action("CategoryTable", "Category")',
                      data: { search: searchValue } ,

                      success: function (result) {
                          $("#tblContainer").html(result);

                      },
                      error: function (result) {
                          console.log(result);
                      }

                  });
          });
           $("#resetBtn" ).on("click",function () {


              var searchValue = '';
              console.log(searchValue);
              $.ajax(
                  {
                      type: "Post",
                      url: '@Url.Action("CategoryTable", "Category")',
                      data: { search: searchValue } ,

                      success: function (result) {
                          $("#tblContainer").html(result);

                      },
                      error: function (result) {
                          console.log(result);
                      }

                  });
          });
          $("#newBtn").on("click", function () {

                $.ajax({
                    type: "Get",
                    url: '@Url.Action("Create", "Category")',
                    success: function (result) {

                        $('#actionContainer').html(result);
                        focusAction("actionContainer");
                    },
                    error: function (result) {
                        console.log(result);
                    }


                });

          });
          $(".editCategoryBtn").on("click", function () {

              $.ajax({

                  url: '@Url.Action("Edit", "Category")',
                  data: {
                      ID: $(this).attr("data-id")
                  },
                  success: function (result) {


                      $('#actionContainer').html(result);
                      focusAction("actionContainer");
                  },
                  error: function (result) {
                      console.log(result);
                  }


              });

          });
          $(".deleteCategoryBtn").on("click", function () {

              swal({
                  title: "Confirm?",
                  text: "Are you sure you want to delete this category?",
                  icon: "warning",
                  buttons: true,
                  dangerMode: true,
              })
                  .then((willDelete) => {
                      if (willDelete) {

                          $.ajax({
                              type: "Post",
                              url: '@Url.Action("Delete", "Category")',
                              data: {
                                  ID: $(this).attr("data-id")
                              },
                              success: function (result) {

                                  $('#tblContainer').html(result);
                                  swal("Category deleted Successfully!", {
                                      icon: "success",
                                  });
                              },
                              error: function (result) {
                                  console.log(result);
                              }



                          });
                      } else {
                          swal("Your Category is safe!");
                      }
                  });
          });

      });

    function focusAction(controlToFocus) {
        $('html, body').animate({
            scrollTop: $("#" + controlToFocus).offset().top - 100
        }, 1000)
    }

</script>